{"version":3,"sources":["webpack:///../@narative/gatsby-theme-novela/src/components/Bio/Bio.tsx","webpack:///../@narative/gatsby-theme-novela/src/sections/articles/Articles.Hero.tsx","webpack:///../@narative/gatsby-theme-novela/src/templates/articles.template.tsx"],"names":["Bio","author","BioContainer","BioAvatar","as","authorsPage","Link","to","slug","data-a11y","aria-label","BioAvatarInner","RoundedImage","src","avatar","medium","BioText","dangerouslySetInnerHTML","__html","bio","p","theme","colors","accent","Image","grey","ArticlesHero","authors","useContext","GridLayoutContext","gridLayout","hasSetGridLayout","setGridLayout","hero","site","edges","node","siteMetadata","tilesIsActive","featuredAuthor","find","featured","Error","Section","relative","id","HeadingContainer","style","maxWidth","HeroHeading","heading","SubheadingContainer","GridControlsContainer","GridButton","onClick","active","title","Tiles","Rows","mediaqueries","desktop","tablet","phablet","primary","hover","ArticlesGradient","ArticlesPage","location","pageContext","articles","group","additionalContext","Layout","SEO","pathname","narrow","ArticlesPaginator","show","pageCount","gradient","colorModeTransition"],"mappings":"oaAyBeA,EAlBgB,SAAC,GAAe,IAAbC,EAAa,EAAbA,OAChC,OACE,cAACC,EAAD,KACE,cAACC,EAAD,CACEC,GAAIH,EAAOI,YAAcC,IAAO,MAChCC,GAAIN,EAAOO,KACXC,YAAU,QACVC,aAAW,gBAEX,cAACC,EAAD,KACE,cAACC,EAAD,CAAcC,IAAKZ,EAAOa,OAAOC,WAGrC,cAACC,EAAD,CAASC,wBAAyB,CAAEC,OAAQjB,EAAOkB,SAOnDjB,EAAe,mBAAH,mBAAG,CAAH,wFAOZC,EAAY,mBAAH,mBAAG,CAAH,oZA4BS,SAAAiB,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,SA5B7B,MAgCTX,EAAe,YAAOY,IAAP,qBAAH,6CAIZb,EAAiB,mBAAH,mBAAG,CAAH,kIASdK,EAAU,iBAAH,mBAAG,CAAH,0DAIF,SAAAI,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,OAJlB,aAOA,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,OAPpB,gC,yvBClDb,IAiDeC,EAjDyB,SAAC,GAAgB,IAAdC,EAAc,EAAdA,QAAc,EACWC,qBAChEC,KAFqD,IAC/CC,kBAD+C,MAClC,QADkC,EACzBC,EADyB,EACzBA,iBAAkBC,EADO,EACPA,cAK1CC,EADU,OACKC,KAAKC,MAAM,GAAGC,KAAKC,aAAaJ,KAC/CK,EAAgBP,GAAmC,UAAfD,EACpCS,EAAiBZ,EAAQa,MAAK,SAAAvC,GAAM,OAAIA,EAAOwC,YAErD,IAAKF,EACH,MAAM,IAAIG,MAAJ,iGAMR,OACE,cAACC,EAAA,EAAD,CAASC,UAAQ,EAACC,GAAG,kBACnB,cAACC,EAAD,CAAkBC,MAAO,CAAEC,SAAaf,EAAKe,SAAV,OACjC,cAACC,EAAD,CAAahC,wBAAyB,CAAEC,OAAQe,EAAKiB,YAEvD,cAACC,EAAD,KACE,cAAC,EAAD,CAAKlD,OAAQsC,IACb,cAACa,EAAD,KACE,cAACC,EAAD,CACEC,QAAS,kBAAMtB,EAAc,UAC7BuB,OAAQjB,EACR7B,YAAU,QACV+C,MAAM,6BACN9C,aAAW,8BAEX,cAAC,IAAM+C,MAAP,OAEF,cAACJ,EAAD,CACEC,QAAS,kBAAMtB,EAAc,SAC7BuB,QAASjB,EACT7B,YAAU,QACV+C,MAAM,4BACN9C,aAAW,6BAEX,cAAC,IAAMgD,KAAP,WAUNP,EAAsB,mBAAH,mBAAG,CAAH,qFAMrBQ,IAAaC,QANQ,SAUrBD,IAAaE,OAVQ,SAcrBF,IAAaG,QAdQ,UAmBnBV,EAAwB,mBAAH,mBAAG,CAAH,mCAIvBO,IAAaE,OAJU,UASrBf,EAAmB,mBAAH,mBAAG,CAAH,kBAGlBa,IAAaC,QAHK,SAOlBD,IAAaE,OAPK,MAYhBZ,EAAc,kBAAH,mBAAG,CAAH,4EAKN,SAAA7B,GAAC,OAAIA,EAAEC,MAAMC,OAAOyC,UALd,aAQJ,SAAA3C,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,SARhB,KAWboC,IAAaC,QAXA,SAebD,IAAaG,QAfA,MAoBXT,EAAa,sBAAH,mBAAG,CAAH,kOAgBE,SAAAjC,GAAC,OAAIA,EAAEC,MAAMC,OAAO0C,QAhBtB,+HA0BQ,SAAA5C,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,SA1B5B,sEAgCD,SAAAH,GAAC,OAAKA,EAAEmC,OAAS,EAAI,MAhCpB,uCAoCF,SAAAnC,GAAC,OAAIA,EAAEC,MAAMC,OAAOyC,UApClB,O,YC1GVE,GAFSC,UAnBgB,SAAC,GAA8B,IAA5BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACpCC,EAAWD,EAAYE,MACvB3C,EAAUyC,EAAYG,kBAAkB5C,QAE9C,OACE,cAAC6C,EAAA,EAAD,KACE,cAACC,EAAA,EAAD,CAAKC,SAAUP,EAASO,WACxB,cAAC,EAAD,CAAc/C,QAASA,IACvB,cAACgB,EAAA,EAAD,CAASgC,QAAM,GACb,cAAC,IAAD,CAAcN,SAAUA,IACxB,cAACO,EAAD,CAAmBC,KAAMT,EAAYU,UAAY,GAC/C,cAAC,IAAcV,KAGnB,cAACH,EAAD,QAOmB,mBAAH,oBAAG,CAAH,uGAQN,SAAA7C,GAAC,OAAIA,EAAEC,MAAMC,OAAOyD,WARd,gBASN,SAAA3D,GAAC,OAAIA,EAAEC,MAAM2D,sBATP,MAYhBJ,EAAoB,mBAAH,oBAAG,EACtB,SAAAxD,GAAC,OAAIA,EAAEyD,MAAF","file":"component---narative-gatsby-theme-novela-src-templates-articles-template-tsx-3161505edd0235b3f3dd.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport styled from '@emotion/styled';\r\n\r\nimport Image from '@components/Image';\r\nimport { IAuthor } from '@types';\r\n\r\nconst Bio: React.FC<IAuthor> = ({ author }) => {\r\n  return (\r\n    <BioContainer>\r\n      <BioAvatar\r\n        as={author.authorsPage ? Link : 'div'}\r\n        to={author.slug}\r\n        data-a11y=\"false\"\r\n        aria-label=\"Author's bio\"\r\n      >\r\n        <BioAvatarInner>\r\n          <RoundedImage src={author.avatar.medium} />\r\n        </BioAvatarInner>\r\n      </BioAvatar>\r\n      <BioText dangerouslySetInnerHTML={{ __html: author.bio }} />\r\n    </BioContainer>\r\n  );\r\n};\r\n\r\nexport default Bio;\r\n\r\nconst BioContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  left: -10px;\r\n`;\r\n\r\nconst BioAvatar = styled.div`\r\n  display: block;\r\n  position: relative;\r\n  height: 40px;\r\n  width: 40px;\r\n  border-radius: 50%;\r\n  background: rgba(0, 0, 0, 0.25);\r\n  margin-right: 16px;\r\n  margin: 10px 26px 10px 10px;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    left: -5px;\r\n    top: -5px;\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    border: 1px solid rgba(0, 0, 0, 0.25);\r\n  }\r\n\r\n  &[data-a11y='true']:focus::after {\r\n    content: '';\r\n    position: absolute;\r\n    left: -5px;\r\n    top: -5px;\r\n    width: 50px;\r\n    height: 50px;\r\n    border: 2px solid ${p => p.theme.colors.accent};\r\n  }\r\n`;\r\n\r\nconst RoundedImage = styled(Image)`\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst BioAvatarInner = styled.div`\r\n  height: 40px;\r\n  width: 40px;\r\n  border-radius: 50%;\r\n  background: rgba(0, 0, 0, 0.25);\r\n  margin-right: 16px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst BioText = styled.p`\r\n  max-width: 430px;\r\n  font-size: 14px;\r\n  line-height: 1.45;\r\n  color: ${p => p.theme.colors.grey};\r\n\r\n  a {\r\n    color: ${p => p.theme.colors.grey};\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\nimport styled from '@emotion/styled';\r\n\r\nimport Section from '@components/Section';\r\nimport Bio from '@components/Bio';\r\nimport Icons from '@icons';\r\nimport mediaqueries from '@styles/media';\r\nimport { IAuthor } from '@types';\r\n\r\nimport { GridLayoutContext } from './Articles.List.Context';\r\n\r\nconst authorQuery = graphql`\r\n  {\r\n    site: allSite {\r\n      edges {\r\n        node {\r\n          siteMetadata {\r\n            hero {\r\n              heading\r\n              maxWidth\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ArticlesHero: React.FC<IAuthor> = ({ authors }) => {\r\n  const { gridLayout = 'tiles', hasSetGridLayout, setGridLayout } = useContext(\r\n    GridLayoutContext,\r\n  );\r\n\r\n  const results = useStaticQuery(authorQuery);\r\n  const hero = results.site.edges[0].node.siteMetadata.hero;\r\n  const tilesIsActive = hasSetGridLayout && gridLayout === 'tiles';\r\n  const featuredAuthor = authors.find(author => author.featured);\r\n\r\n  if (!featuredAuthor) {\r\n    throw new Error(`\r\n      No featured Author found.\r\n      Please ensure you have at least featured Author.\r\n  `);\r\n  }\r\n\r\n  return (\r\n    <Section relative id=\"Articles__Hero\">\r\n      <HeadingContainer style={{ maxWidth: `${hero.maxWidth}px` }}>\r\n        <HeroHeading dangerouslySetInnerHTML={{ __html: hero.heading }} />\r\n      </HeadingContainer>\r\n      <SubheadingContainer>\r\n        <Bio author={featuredAuthor} />\r\n        <GridControlsContainer>\r\n          <GridButton\r\n            onClick={() => setGridLayout('tiles')}\r\n            active={tilesIsActive}\r\n            data-a11y=\"false\"\r\n            title=\"Show articles in Tile grid\"\r\n            aria-label=\"Show articles in Tile grid\"\r\n          >\r\n            <Icons.Tiles />\r\n          </GridButton>\r\n          <GridButton\r\n            onClick={() => setGridLayout('rows')}\r\n            active={!tilesIsActive}\r\n            data-a11y=\"false\"\r\n            title=\"Show articles in Row grid\"\r\n            aria-label=\"Show articles in Row grid\"\r\n          >\r\n            <Icons.Rows />\r\n          </GridButton>\r\n        </GridControlsContainer>\r\n      </SubheadingContainer>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default ArticlesHero;\r\n\r\nconst SubheadingContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 100px;\r\n\r\n  ${mediaqueries.desktop`\r\n    margin-bottom: 80px;\r\n  `};\r\n\r\n  ${mediaqueries.tablet`\r\n    margin-bottom: 60px;\r\n  `};\r\n\r\n  ${mediaqueries.phablet`\r\n    display: none;\r\n  `};\r\n`;\r\n\r\nconst GridControlsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${mediaqueries.tablet`\r\n    display: none;\r\n  `};\r\n`;\r\n\r\nconst HeadingContainer = styled.div`\r\n  margin: 100px 0;\r\n\r\n  ${mediaqueries.desktop`\r\n    width: 80%;\r\n  `}\r\n\r\n  ${mediaqueries.tablet`\r\n    width: 100%;\r\n  `}\r\n`;\r\n\r\nconst HeroHeading = styled.h1`\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 52px;\r\n  line-height: 1.15;\r\n  color: ${p => p.theme.colors.primary};\r\n\r\n  a {\r\n    color: ${p => p.theme.colors.accent};\r\n  }\r\n\r\n  ${mediaqueries.desktop`\r\n    font-size: 38px\r\n  `}\r\n\r\n  ${mediaqueries.phablet`\r\n    font-size: 32px;\r\n  `}\r\n`;\r\n\r\nconst GridButton = styled.button<{ active: boolean }>`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 36px;\r\n  width: 36px;\r\n  border-radius: 50%;\r\n  background: transparent;\r\n  transition: background 0.25s;\r\n\r\n  &:not(:last-child) {\r\n    margin-right: 30px;\r\n  }\r\n\r\n  &:hover {\r\n    background: ${p => p.theme.colors.hover};\r\n  }\r\n\r\n  &[data-a11y='true']:focus::after {\r\n    content: '';\r\n    position: absolute;\r\n    left: -10%;\r\n    top: -10%;\r\n    width: 120%;\r\n    height: 120%;\r\n    border: 2px solid ${p => p.theme.colors.accent};\r\n    background: rgba(255, 255, 255, 0.01);\r\n    border-radius: 50%;\r\n  }\r\n\r\n  svg {\r\n    opacity: ${p => (p.active ? 1 : 0.25)};\r\n    transition: opacity 0.2s;\r\n\r\n    path {\r\n      fill: ${p => p.theme.colors.primary};\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport Section from \"@components/Section\";\r\nimport SEO from \"@components/SEO\";\r\nimport Layout from \"@components/Layout\";\r\nimport Paginator from \"@components/Navigation/Navigation.Paginator\";\r\n\r\nimport ArticlesHero from \"../sections/articles/Articles.Hero\";\r\nimport ArticlesList from \"../sections/articles/Articles.List\";\r\n\r\nimport { Template } from \"@types\";\r\n\r\nconst ArticlesPage: Template = ({ location, pageContext }) => {\r\n  const articles = pageContext.group;\r\n  const authors = pageContext.additionalContext.authors;\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO pathname={location.pathname} />\r\n      <ArticlesHero authors={authors} />\r\n      <Section narrow>\r\n        <ArticlesList articles={articles} />\r\n        <ArticlesPaginator show={pageContext.pageCount > 1}>\r\n          <Paginator {...pageContext} />\r\n        </ArticlesPaginator>\r\n      </Section>\r\n      <ArticlesGradient />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ArticlesPage;\r\n\r\nconst ArticlesGradient = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 590px;\r\n  z-index: 0;\r\n  pointer-events: none;\r\n  background: ${p => p.theme.colors.gradient};\r\n  transition: ${p => p.theme.colorModeTransition};\r\n`;\r\n\r\nconst ArticlesPaginator = styled.div<{ show: boolean }>`\r\n  ${p => p.show && `margin-top: 95px;`}\r\n`;\r\n"],"sourceRoot":""}